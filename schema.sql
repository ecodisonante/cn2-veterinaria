-- =========================================================
-- SCHEMA: Sistema Veterinaria - Oracle
-- Compatibilidad: Oracle 12c+ (IDENTITY), formatos ISO
-- =========================================================

-- crear un esquema dedicado
-- CREATE USER VETERINARIA IDENTIFIED BY "";
-- GRANT CONNECT, RESOURCE TO VETERINARIA;
-- ALTER USER VETERINARIA QUOTA UNLIMITED ON USERS;
-- ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD';
-- ALTER SESSION SET NLS_TIMESTAMP_TZ_FORMAT = 'YYYY-MM-DD"T"HH24:MI:SS.FF TZH:TZM';


-- Subcatálogos específicos por entidad (independientes)
CREATE TABLE CLIENTE_ESTADO (
  ID     NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  NOMBRE VARCHAR2(40) NOT NULL UNIQUE
);
CREATE TABLE EMPLEADO_ESTADO (
  ID     NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  NOMBRE VARCHAR2(40) NOT NULL UNIQUE
);
CREATE TABLE MASCOTA_ESTADO (
  ID     NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  NOMBRE VARCHAR2(40) NOT NULL UNIQUE
);
CREATE TABLE INVENTARIO_ESTADO (
  ID     NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  NOMBRE VARCHAR2(40) NOT NULL UNIQUE
);
CREATE TABLE CITA_ESTADO (
  ID     NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  NOMBRE VARCHAR2(40) NOT NULL UNIQUE
);
CREATE TABLE FACTURA_ESTADO (
  ID     NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  NOMBRE VARCHAR2(40) NOT NULL UNIQUE
);
CREATE TABLE NOTIFICACION_ESTADO (
  ID     NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  NOMBRE VARCHAR2(40) NOT NULL UNIQUE
);
CREATE TABLE LAB_ESTADO (
  ID     NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  NOMBRE VARCHAR2(40) NOT NULL UNIQUE
);

-- Semilla de subcatálogos (IDs explícitos iniciando desde 1)
INSERT INTO CLIENTE_ESTADO (ID, NOMBRE) VALUES (1, 'ACTIVO');
INSERT INTO CLIENTE_ESTADO (ID, NOMBRE) VALUES (2, 'INACTIVO');

INSERT INTO EMPLEADO_ESTADO (ID, NOMBRE) VALUES (1, 'ACTIVO');
INSERT INTO EMPLEADO_ESTADO (ID, NOMBRE) VALUES (2, 'INACTIVO');

INSERT INTO MASCOTA_ESTADO (ID, NOMBRE) VALUES (1, 'ACTIVO');
INSERT INTO MASCOTA_ESTADO (ID, NOMBRE) VALUES (2, 'INACTIVO');
INSERT INTO MASCOTA_ESTADO (ID, NOMBRE) VALUES (3, 'FALLECIDO');

INSERT INTO INVENTARIO_ESTADO (ID, NOMBRE) VALUES (1, 'ACTIVO');
INSERT INTO INVENTARIO_ESTADO (ID, NOMBRE) VALUES (2, 'INACTIVO');

INSERT INTO CITA_ESTADO (ID, NOMBRE) VALUES (1, 'PENDIENTE');
INSERT INTO CITA_ESTADO (ID, NOMBRE) VALUES (2, 'CONFIRMADA');
INSERT INTO CITA_ESTADO (ID, NOMBRE) VALUES (3, 'CANCELADA');
INSERT INTO CITA_ESTADO (ID, NOMBRE) VALUES (4, 'ATENDIDA');

INSERT INTO FACTURA_ESTADO (ID, NOMBRE) VALUES (1, 'PENDIENTE');
INSERT INTO FACTURA_ESTADO (ID, NOMBRE) VALUES (2, 'PAGADA');
INSERT INTO FACTURA_ESTADO (ID, NOMBRE) VALUES (3, 'ANULADA');

INSERT INTO NOTIFICACION_ESTADO (ID, NOMBRE) VALUES (1, 'PENDIENTE');
INSERT INTO NOTIFICACION_ESTADO (ID, NOMBRE) VALUES (2, 'ENVIADA');
INSERT INTO NOTIFICACION_ESTADO (ID, NOMBRE) VALUES (3, 'ERROR');

INSERT INTO LAB_ESTADO (ID, NOMBRE) VALUES (1, 'RECIBIDO');
INSERT INTO LAB_ESTADO (ID, NOMBRE) VALUES (2, 'PROCESADO');
INSERT INTO LAB_ESTADO (ID, NOMBRE) VALUES (3, 'ERROR');


------------------------------------------------------------
-- Tablas paramétricas
------------------------------------------------------------

-- Roles
CREATE TABLE ROL (
  ID                NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  NOMBRE            VARCHAR2(30) NOT NULL UNIQUE
);

INSERT INTO ROL (NOMBRE) VALUES ('ADMIN');
INSERT INTO ROL (NOMBRE) VALUES ('VETERINARIO');
INSERT INTO ROL (NOMBRE) VALUES ('ASISTENTE');
INSERT INTO ROL (NOMBRE) VALUES ('RECEPCION');

-- Especies
CREATE TABLE ESPECIE (
  ID        NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  NOMBRE    VARCHAR2(60) NOT NULL UNIQUE
);

INSERT INTO ESPECIE (NOMBRE) VALUES ('PERRO');
INSERT INTO ESPECIE (NOMBRE) VALUES ('GATO');
INSERT INTO ESPECIE (NOMBRE) VALUES ('REPTIL');
INSERT INTO ESPECIE (NOMBRE) VALUES ('RODENTES');
INSERT INTO ESPECIE (NOMBRE) VALUES ('AVE');
INSERT INTO ESPECIE (NOMBRE) VALUES ('PESCADO');

-- Razas
CREATE TABLE RAZA (
  ID         NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  ESPECIE_ID NUMBER       NOT NULL REFERENCES ESPECIE(ID),
  NOMBRE     VARCHAR2(100) NOT NULL,
  CONSTRAINT UX_RAZA UNIQUE (ESPECIE_ID, NOMBRE)
);

INSERT INTO RAZA (ESPECIE_ID, NOMBRE) VALUES (1, 'LABRADOR');
INSERT INTO RAZA (ESPECIE_ID, NOMBRE) VALUES (1, 'POODLE');
INSERT INTO RAZA (ESPECIE_ID, NOMBRE) VALUES (2, 'SIAMES');
INSERT INTO RAZA (ESPECIE_ID, NOMBRE) VALUES (2, 'TIGRE BLANCO');
INSERT INTO RAZA (ESPECIE_ID, NOMBRE) VALUES (3, 'IGUANA');
INSERT INTO RAZA (ESPECIE_ID, NOMBRE) VALUES (3, 'LAGARTO');
INSERT INTO RAZA (ESPECIE_ID, NOMBRE) VALUES (4, 'CHINCHILLA');
INSERT INTO RAZA (ESPECIE_ID, NOMBRE) VALUES (4, 'CONEJO');
INSERT INTO RAZA (ESPECIE_ID, NOMBRE) VALUES (5, 'GALLO');
INSERT INTO RAZA (ESPECIE_ID, NOMBRE) VALUES (5, 'PALOMA');
INSERT INTO RAZA (ESPECIE_ID, NOMBRE) VALUES (6, 'TUNA');
INSERT INTO RAZA (ESPECIE_ID, NOMBRE) VALUES (6, 'PIRAÑA');


-- Sexo
CREATE TABLE SEXO (
    ID        NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    NOMBRE    VARCHAR2(20) NOT NULL UNIQUE
);

INSERT INTO SEXO (NOMBRE) VALUES ('MACHO');
INSERT INTO SEXO (NOMBRE) VALUES ('HEMBRA');
INSERT INTO SEXO (NOMBRE) VALUES ('DESCONOCIDO');


-- Tipos de movimientos
create table TIPO_MOVIMIENTO (
    ID                NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    NOMBRE            VARCHAR2(20) NOT NULL UNIQUE
);

INSERT INTO TIPO_MOVIMIENTO (NOMBRE) VALUES ('INGRESO');
INSERT INTO TIPO_MOVIMIENTO (NOMBRE) VALUES ('EGRESO');
INSERT INTO TIPO_MOVIMIENTO (NOMBRE) VALUES ('AJUSTE');


-- Tipos de insumos
CREATE TABLE TIPO_INSUMO (
    ID                NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    NOMBRE            VARCHAR2(20) NOT NULL UNIQUE
);

INSERT INTO TIPO_INSUMO (NOMBRE) VALUES ('MEDICAMENTO');
INSERT INTO TIPO_INSUMO (NOMBRE) VALUES ('INSUMO');



------------------------------------------------------------
-- Tablas base (clientes / empleados / especie/raza / mascotas)
------------------------------------------------------------

-- Clientes
CREATE TABLE CLIENTE (
  ID                NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  RUT               VARCHAR2(20),
  NOMBRE_COMPLETO   VARCHAR2(150)       NOT NULL,
  EMAIL             VARCHAR2(120)       NOT NULL,
  TELEFONO          VARCHAR2(30),
  DIRECCION         VARCHAR2(250),
  ESTADO_ID         NUMBER              NOT NULL,
  FECHA_CREACION    TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP NOT NULL,
  CONSTRAINT FK_CLIENTE_ESTADO FOREIGN KEY (ESTADO_ID) REFERENCES CLIENTE_ESTADO (ID)
);
CREATE UNIQUE INDEX UX_CLIENTE_EMAIL ON CLIENTE (EMAIL);
CREATE INDEX IX_CLIENTE_ESTADO ON CLIENTE (ESTADO_ID);


-- Empleados
CREATE TABLE EMPLEADO (
  ID                NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  RUT               VARCHAR2(20),
  NOMBRE_COMPLETO   VARCHAR2(150)      NOT NULL,
  EMAIL             VARCHAR2(120)      NOT NULL,
  TELEFONO          VARCHAR2(30),
  ROL_ID            NUMBER             NOT NULL, -- ADMIN, VETERINARIO, ASISTENTE, RECEPCION
  ESTADO_ID         NUMBER             NOT NULL,
  FECHA_INGRESO     DATE,
  FECHA_CREACION    TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP NOT NULL,
  CONSTRAINT FK_EMPLEADO_ESTADO FOREIGN KEY (ESTADO_ID) REFERENCES EMPLEADO_ESTADO (ID),
  CONSTRAINT FK_EMPLEADO_ROL FOREIGN KEY (ROL_ID) REFERENCES ROL (ID)
);
CREATE UNIQUE INDEX UX_EMPLEADO_EMAIL ON EMPLEADO (EMAIL);
CREATE INDEX IX_EMPLEADO_ESTADO ON EMPLEADO (ESTADO_ID);


-- Mascotas
CREATE TABLE MASCOTA (
  ID                 NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  CLIENTE_ID         NUMBER NOT NULL,
  NOMBRE             VARCHAR2(100) NOT NULL,
  ESPECIE_ID         NUMBER,
  RAZA_ID            NUMBER,
  FECHA_NACIMIENTO   DATE,
  SEXO_ID            NUMBER NOT NULL,
  ESTADO_ID          NUMBER NOT NULL,
  FOTO_URL           VARCHAR2(500),
  OTRA_ESPECIE       VARCHAR2(60), -- si no está en el catálogo
  OTRA_RAZA          VARCHAR2(60), -- si no está en el catálogo
  FECHA_CREACION     TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP NOT NULL,
  CONSTRAINT FK_MASCOTA_CLIENTE FOREIGN KEY (CLIENTE_ID) REFERENCES CLIENTE (ID),
  CONSTRAINT FK_MASCOTA_ESPECIE FOREIGN KEY (ESPECIE_ID) REFERENCES ESPECIE (ID),
  CONSTRAINT FK_MASCOTA_RAZA FOREIGN KEY (RAZA_ID) REFERENCES RAZA (ID),
  CONSTRAINT FK_MASCOTA_SEXO FOREIGN KEY (SEXO_ID) REFERENCES SEXO (ID),
  CONSTRAINT FK_MASCOTA_ESTADO FOREIGN KEY (ESTADO_ID) REFERENCES MASCOTA_ESTADO (ID)
);
CREATE INDEX IX_MASCOTA_CLIENTE ON MASCOTA (CLIENTE_ID);
CREATE INDEX IX_MASCOTA_ESTADO  ON MASCOTA (ESTADO_ID);

------------------------------------------------------------
-- Inventario
------------------------------------------------------------

-- Inventario
CREATE TABLE INVENTARIO_ITEM (
  ID                NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  SKU               VARCHAR2(60) UNIQUE,
  NOMBRE            VARCHAR2(150) NOT NULL,
  TIPO              NUMBER  NOT NULL,   -- MEDICAMENTO, INSUMO
  DESCRIPCION       VARCHAR2(1000),
  STOCK_ACTUAL      NUMBER(10)    DEFAULT 0 NOT NULL,
  STOCK_MINIMO      NUMBER(10)    DEFAULT 0 NOT NULL,
  UNIDAD            VARCHAR2(20)  DEFAULT 'UNID' NOT NULL, -- UNID, CAJA, ML, GR, etc.
  PRECIO_UNITARIO   NUMBER(12,2)  DEFAULT 0 NOT NULL,
  ESTADO_ID         NUMBER        NOT NULL,
  FECHA_CREACION    TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP NOT NULL,
  CONSTRAINT FK_INV_TIPO FOREIGN KEY (TIPO) REFERENCES TIPO_INSUMO(ID),
  CONSTRAINT FK_INV_ESTADO FOREIGN KEY (ESTADO_ID) REFERENCES INVENTARIO_ESTADO (ID)
);
CREATE INDEX IX_INV_ESTADO ON INVENTARIO_ITEM (ESTADO_ID);

-- Movimientos
CREATE TABLE INVENTARIO_MOV (
  ID                NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  ITEM_ID           NUMBER NOT NULL REFERENCES INVENTARIO_ITEM(ID),
  TIPO_MOV          NUMBER NOT NULL,
  CANTIDAD          NUMBER(10)   NOT NULL,
  MOTIVO            VARCHAR2(200),
  REFERENCIA_ID     NUMBER,
  FECHA_MOV         TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP NOT NULL,
  CONSTRAINT FK_INV_TIPO_MOV FOREIGN KEY (TIPO_MOV) REFERENCES TIPO_MOVIMIENTO(ID)
);
CREATE INDEX IX_INVMOV_ITEM ON INVENTARIO_MOV (ITEM_ID);
CREATE INDEX IX_INVMOV_TIPO ON INVENTARIO_MOV (TIPO_MOV);

------------------------------------------------------------
-- Citas y agenda
------------------------------------------------------------

-- Citas
CREATE TABLE CITA (
  ID                 NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  CLIENTE_ID         NUMBER NOT NULL REFERENCES CLIENTE(ID),
  MASCOTA_ID         NUMBER NOT NULL REFERENCES MASCOTA(ID),
  VETERINARIO_ID     NUMBER NOT NULL REFERENCES EMPLEADO(ID),
  FECHA_HORA         TIMESTAMP WITH TIME ZONE NOT NULL,
  ESTADO_ID          NUMBER NOT NULL,
  MOTIVO             VARCHAR2(300),
  FECHA_CREACION     TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP NOT NULL,
  CONSTRAINT FK_CITA_ESTADO FOREIGN KEY (ESTADO_ID) REFERENCES CITA_ESTADO (ID)
);
CREATE INDEX IX_CITA_FECHA  ON CITA (FECHA_HORA);
CREATE INDEX IX_CITA_MASCOTA ON CITA (MASCOTA_ID);
CREATE INDEX IX_CITA_ESTADO  ON CITA (ESTADO_ID);

------------------------------------------------------------
-- Atención e historial clínico
------------------------------------------------------------

-- Atenciones
CREATE TABLE ATENCION (
  ID                  NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  CITA_ID             NUMBER NOT NULL REFERENCES CITA(ID),
  VETERINARIO_ID      NUMBER NOT NULL REFERENCES EMPLEADO(ID),
  DIAGNOSTICO         CLOB,
  TRATAMIENTO         CLOB,
  RECOMENDACIONES     CLOB,
  FECHA_ATENCION      TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP NOT NULL
);

-- Atenciones items
CREATE TABLE ATENCION_ITEM (
  ID             NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  ATENCION_ID    NUMBER NOT NULL REFERENCES ATENCION(ID),
  ITEM_ID        NUMBER NOT NULL REFERENCES INVENTARIO_ITEM(ID),
  CANTIDAD       NUMBER(10) NOT NULL
);
CREATE INDEX IX_ATENCION_ITEM_A ON ATENCION_ITEM (ATENCION_ID);

-- Historial de eventos
CREATE TABLE HISTORIAL_EVENTO (
  ID               NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  MASCOTA_ID       NUMBER NOT NULL REFERENCES MASCOTA(ID),
  TIPO_EVENTO      VARCHAR2(40) NOT NULL,  -- ATENCION, VACUNA, EXAMEN, CIRUGIA
  DESCRIPCION      VARCHAR2(1000),
  FECHA_EVENTO     TIMESTAMP WITH TIME ZONE NOT NULL,
  ORIGEN_REF       VARCHAR2(40),           -- 'ATENCION','LAB_RESULT','OTRO'
  ORIGEN_ID        NUMBER
);
CREATE INDEX IX_HISTORIAL_MASCOTA ON HISTORIAL_EVENTO (MASCOTA_ID, FECHA_EVENTO);

------------------------------------------------------------
-- Facturación y pagos
------------------------------------------------------------

-- Facturas
CREATE TABLE FACTURA (
  ID                 NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  CLIENTE_ID         NUMBER NOT NULL REFERENCES CLIENTE(ID),
  FECHA_EMISION      TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP NOT NULL,
  MONEDA             VARCHAR2(3)  DEFAULT 'CLP' NOT NULL,
  TOTAL              NUMBER(14,2) NOT NULL,
  ESTADO_ID          NUMBER NOT NULL,
  OBSERVACION        VARCHAR2(500),
  CONSTRAINT FK_FACTURA_ESTADO FOREIGN KEY (ESTADO_ID) REFERENCES FACTURA_ESTADO (ID)
);
CREATE INDEX IX_FACTURA_ESTADO ON FACTURA (ESTADO_ID);

-- Factura detalles
CREATE TABLE FACTURA_DET (
  ID             NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  FACTURA_ID     NUMBER NOT NULL REFERENCES FACTURA(ID) ON DELETE CASCADE,
  CONCEPTO       VARCHAR2(200) NOT NULL,
  CANTIDAD       NUMBER(10)     NOT NULL,
  PRECIO_UNIT    NUMBER(14,2)   NOT NULL,
  IMPORTE        NUMBER(14,2)   GENERATED ALWAYS AS (CANTIDAD * PRECIO_UNIT) VIRTUAL
);
CREATE INDEX IX_FACTURA_DET_F ON FACTURA_DET (FACTURA_ID);

-- Pagos
CREATE TABLE PAGO (
  ID               NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  FACTURA_ID       NUMBER NOT NULL REFERENCES FACTURA(ID) ON DELETE CASCADE,
  FECHA_PAGO       TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP NOT NULL,
  MEDIO_PAGO       VARCHAR2(20) NOT NULL, -- EFECTIVO, TARJETA, TRANSFERENCIA, WEBPAY
  MONTO            NUMBER(14,2) NOT NULL,
  ESTADO           VARCHAR2(20) DEFAULT 'CONFIRMADO' NOT NULL, -- simple, no catalogado
  TX_REF           VARCHAR2(120)
);
CREATE INDEX IX_PAGO_FACTURA ON PAGO (FACTURA_ID);

------------------------------------------------------------
-- Comunicación con clientes
------------------------------------------------------------

-- Notificaciones
CREATE TABLE NOTIFICACION (
  ID                NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  CLIENTE_ID        NUMBER REFERENCES CLIENTE(ID),
  CANAL             VARCHAR2(20) NOT NULL,   -- EMAIL, SMS, WHATSAPP
  ASUNTO            VARCHAR2(200),
  MENSAJE           CLOB,
  ESTADO_ID         NUMBER NOT NULL,
  ERROR_MSG         VARCHAR2(500),
  FECHA_CREACION    TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP NOT NULL,
  FECHA_ENVIO       TIMESTAMP WITH TIME ZONE,
  CONSTRAINT FK_NOTIF_ESTADO FOREIGN KEY (ESTADO_ID) REFERENCES NOTIFICACION_ESTADO (ID)
);
CREATE INDEX IX_NOTIF_CLIENTE ON NOTIFICACION (CLIENTE_ID, ESTADO_ID);

------------------------------------------------------------
-- Integración con laboratorios externos
------------------------------------------------------------
CREATE TABLE LAB_RESULT (
  ID                 NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  MASCOTA_ID         NUMBER NOT NULL REFERENCES MASCOTA(ID),
  ORDEN_EXTERNA_ID   VARCHAR2(80),
  TIPO_EXAMEN        VARCHAR2(120),
  ESTADO_ID          NUMBER NOT NULL,
  ARCHIVO_URL        VARCHAR2(500),
  OBSERVACION        VARCHAR2(500),
  FECHA_RECEPCION    TIMESTAMP WITH TIME ZONE DEFAULT SYSTIMESTAMP NOT NULL,
  FECHA_PROCESO      TIMESTAMP WITH TIME ZONE,
  CONSTRAINT FK_LAB_ESTADO FOREIGN KEY (ESTADO_ID) REFERENCES LAB_ESTADO (ID)
);
CREATE INDEX IX_LAB_MASCOTA ON LAB_RESULT (MASCOTA_ID);
CREATE INDEX IX_LAB_ESTADO  ON LAB_RESULT (ESTADO_ID);


------------------------------------------------------------
-- Trigger de inventario (descuento por atención)
------------------------------------------------------------
CREATE OR REPLACE TRIGGER TRG_AI_DESCUENTO
AFTER INSERT ON ATENCION_ITEM
FOR EACH ROW
BEGIN
  UPDATE INVENTARIO_ITEM
     SET STOCK_ACTUAL = STOCK_ACTUAL - :NEW.CANTIDAD
   WHERE ID = :NEW.ITEM_ID;

  INSERT INTO INVENTARIO_MOV (ITEM_ID, TIPO_MOV, CANTIDAD, MOTIVO, REFERENCIA_ID)
  VALUES (:NEW.ITEM_ID, 'EGRESO', :NEW.CANTIDAD, 'Uso en atención', :NEW.ATENCION_ID);
END;
/
